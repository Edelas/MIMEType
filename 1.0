using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;

class Solution
{
    static void Main(string[] args)
    {
        int N = int.Parse(Console.ReadLine()); // Number of elements which make up the association table.
        int Q = int.Parse(Console.ReadLine()); // Number Q of file names to be analyzed.
        
        //declare two parallel lists: two elements having the same index make a pair
        List<string> Extension = new List<string>(); //list of all Extensions
        List<string> MimeType = new List<string>();  //list of all Mime Types 
        
        for (int i = 0; i < N; i++)
        {
            string[] inputs = Console.ReadLine().Split(' ');
            string EXT = inputs[0]; // file extension
            string MT = inputs[1]; // MIME type.
            
            Extension.Add(EXT.ToLower()); //we'll make all checks in lower register
            MimeType.Add(MT);
        }
        
        for (int i = 0; i < Q; i++)
        {
            string FNAME = Console.ReadLine(); // One file name per line.
        
            if (FNAME.LastIndexOf(".")==-1)
            {
                Console.WriteLine("UNKNOWN");
            }
            else
            {
                try
                    {
                    Console.WriteLine(MimeType[Extension.IndexOf(FNAME.ToLower().Substring(FNAME.LastIndexOf(".") + 1))]);
                    }
                catch (ArgumentOutOfRangeException E)
                    {
                    Console.WriteLine("UNKNOWN");
                    }
            }
            
        }
        
    }
}
